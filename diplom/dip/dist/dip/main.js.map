{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/MenuService/MenuService.ts","webpack:///./src/app/MenuService/order.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/client/UserService.ts","webpack:///./src/app/client/account.ts","webpack:///./src/app/client/client-component/account-info/account-info.component.css","webpack:///./src/app/client/client-component/account-info/account-info.component.html","webpack:///./src/app/client/client-component/account-info/account-info.component.ts","webpack:///./src/app/client/client-component/client-component.component.css","webpack:///./src/app/client/client-component/client-component.component.html","webpack:///./src/app/client/client-component/client-component.component.ts","webpack:///./src/app/client/client-component/enterto/enterto.component.css","webpack:///./src/app/client/client-component/enterto/enterto.component.html","webpack:///./src/app/client/client-component/enterto/enterto.component.ts","webpack:///./src/app/client/client-component/menu-display/menu-display.component.css","webpack:///./src/app/client/client-component/menu-display/menu-display.component.html","webpack:///./src/app/client/client-component/menu-display/menu-display.component.ts","webpack:///./src/app/client/client.module.ts","webpack:///./src/app/client/user.ts","webpack:///./src/app/kitchen/kitchen-component/is-cooking/is-cooking.component.css","webpack:///./src/app/kitchen/kitchen-component/is-cooking/is-cooking.component.html","webpack:///./src/app/kitchen/kitchen-component/is-cooking/is-cooking.component.ts","webpack:///./src/app/kitchen/kitchen-component/kitchen-component.component.css","webpack:///./src/app/kitchen/kitchen-component/kitchen-component.component.html","webpack:///./src/app/kitchen/kitchen-component/kitchen-component.component.ts","webpack:///./src/app/kitchen/kitchen-component/my-orders/my-orders.component.css","webpack:///./src/app/kitchen/kitchen-component/my-orders/my-orders.component.html","webpack:///./src/app/kitchen/kitchen-component/my-orders/my-orders.component.ts","webpack:///./src/app/kitchen/kitchen.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Dish } from './dish';\r\nimport { Order } from './order';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n   \r\n   \r\n@Injectable()\r\nexport class MenuService{\r\n   \r\n\tconstructor(private http: HttpClient){ }\r\n\t\r\n\t\r\n\tgetDishes(): Observable<any>{\r\n\t\treturn this.http.get('assets/menu.json');\r\n\t}\r\n\t\r\n\t\r\n\tgetOrders(): Observable<any>{\r\n\t\treturn this.http.get('/orders');\r\n\t}\r\n\t\r\n\tgetOrdersDueEmail(email): Observable<any>{\r\n\t\treturn this.http.get('/orders/email/' + email);\r\n\t}\r\n\t\r\n\tgetCookingOrders(): Observable<any>{\r\n\t\treturn this.http.get('/orders/cooking');\r\n\t}\r\n\t\r\n\tgetOrderingOrders(): Observable<any>{\r\n\t\treturn this.http.get('/orders/ordering');\r\n\t}\r\n\t\r\n\r\n\t\r\n\t\r\n\taddOrder(newOrder): Observable<any>{\t\r\n\t\tlet httpOptions = {\r\n\t\t\theaders: new HttpHeaders({\r\n\t\t\t\t'Content-Type':  'application/json'\r\n\t\t\t})\r\n\t\t}\r\n\t\t\r\n\t\treturn this.http.post('/orders', JSON.stringify(newOrder), httpOptions);\r\n\t}\r\n\t\r\n\t\r\n\tchangeOrderCondition(order): Observable<any>{\r\n\t\tlet httpOptions = {\r\n\t\t\theaders: new HttpHeaders({\r\n\t\t\t\t'Content-Type':  'application/json'\r\n\t\t\t})\r\n\t\t}\t\r\n\r\n\t\treturn this.http.put('/orders/' + order._id, JSON.stringify(order), httpOptions);\r\n\t}\r\n\t\r\n\r\n\r\n\t\r\n\t/*\r\n\t    addTask(newTask){\r\n        var headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.post('/api/task', JSON.stringify(newTask), {headers: headers})\r\n            .map(res => res.json());\r\n    }\r\n\t\r\n\tprivate serverApi= 'http://localhost:3000';\r\n\t\r\n\t\r\n    public getAllLists():Observable<List[]> {\r\n        let URI = \"${this.serverApi}/orders/\";\r\n        return this.http.get(URI)\r\n            .map(res => res.json())\r\n            .map(res => <List[]>res.lists);\r\n    }\r\n\t\r\n\tpublic addList(list: List) {\r\n        let URI = \"${this.serverApi}/orders/\";\r\n        let headers = new Headers;\r\n         let body = JSON.stringify({title: list.title, description: list.description, category: list.category});\r\n         console.log(body);\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.post(URI, body ,{headers: headers})\r\n        .map(res => res.json());\r\n    }\r\n\r\n\t\r\n\t\r\n\r\n    public deleteList(listId : string) {\r\n\t\t\r\n      let URI = \"${this.serverApi}/orders/${listId}\";\r\n        let headers = new Headers;\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.delete(URI, {headers})\r\n        .map(res => res.json());\r\n\t\t\r\n    }\t\r\n*/\t\r\n\r\n\t\r\n\r\n\t\r\n\t/*\r\n\taddOrder(newOrder){\r\n\t\tvar headers = new Headers();\r\n\t\theaders.append('Content-Type', 'application/json');\r\n\t\t\r\n\t\treturn this.http.post('/api/orders', JSON.stringify(newOrder), {headers: headers})\r\n\t\t\t.map(res => res.json());\r\n    }\r\n\t\r\n\t\r\n\tdeleteOrder(id){\r\n        return this.http.delete('/api/order/'+id)\r\n            .map(res => res.json());\r\n    }\r\n\t\r\n\t\r\n\tupdateOrderStatus(order){\r\n\t\tvar headers = new Headers();\r\n\t\theaders.append('Content-Type', 'application/json');\r\n        \r\n\t\treturn this.http.put('/api/order/'+order.id, JSON.stringify(order), {headers: headers})\r\n            .map(res => res.json());\r\n    }*/\r\n\t\r\n\t   \r\n}","export class Order {\n\n\ttitle: string;\n\tcondition: string;\n\tuserEmail: string;\n\tdate: number;\n\t\n\t\n\tupdateToCooking = function(){\n\t\tthis.condition = \"Готовится\";\n\t}\n\t\n}","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\nimport {MenuService} from './MenuService/MenuService';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  providers:[MenuService],\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MaterializeModule } from 'angular2-materialize';\nimport { HttpClientModule } from '@angular/common/http'; \nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { ClientModule } from './client/client.module';\nimport { KitchenModule } from './kitchen/kitchen.module';\nimport { ClientComponentComponent } from './client/client-component/client-component.component';\nimport { KitchenComponent } from './kitchen/kitchen-component/kitchen-component.component';\n\n\nconst appRoutes: Routes = [\n\t{ path: '', component: ClientComponentComponent },\n\t{ path: 'kitchen', component: KitchenComponent }\n];\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n\tClientModule,\n\tKitchenModule,\n\tMaterializeModule,\n\tHttpClientModule,\n\tRouterModule.forRoot(appRoutes)\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { User} from './user';\r\n   \r\n   \r\n@Injectable()\r\nexport class UserService{\r\n   \r\n\tconstructor(private http: HttpClient){ }\r\n\t\r\n\t\r\n\tcheckUserInDB(email): Observable<any>{\r\n\t\treturn this.http.get('/users/' + email);\r\n\t}\r\n\t\r\n\r\n\taddUser(newUser): Observable<any>{\t\r\n\t\tlet httpOptions = {\r\n\t\t\theaders: new HttpHeaders({\r\n\t\t\t\t'Content-Type':  'application/json'\r\n\t\t\t})\r\n\t\t}\r\n\t\t\r\n\t\treturn this.http.post('/users', JSON.stringify(newUser), httpOptions);\r\n\t}\r\n\t\r\n\t\r\n\tupdateUserInfo(user): Observable<any>{\r\n\t\tlet httpOptions = {\r\n\t\t\theaders: new HttpHeaders({\r\n\t\t\t\t'Content-Type':  'application/json'\r\n\t\t\t})\r\n\t\t}\t\r\n\t\treturn this.http.put('/users/' + user.email, JSON.stringify(user), httpOptions);\r\n\t}\r\n\t\r\n\r\n\t   \r\n}","export class Account {\n\n\tconstructor(\n\t) { }\n\n\tprivate static sum_to_add = 100;\n\tprivate static currency_name = \" Галактические кредиты\";\n\t\n\tstatic addMoneyToAccount(): number {\n\t\treturn this.sum_to_add;\n\t}\n\t\n\tstatic getCurrencyName(): string {\n\t\treturn this.currency_name;\n\t}\n\t\n}","module.exports = \"a:hover {\\r\\n\\tcursor:pointer;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col s12 m5\\\">\\n\\t\\t<div class=\\\"card teal darken-3\\\">\\n\\t\\t<div class=\\\"card-content white-text\\\">\\n\\t\\t\\t<span class=\\\"card-title\\\">Ваши данные</span>\\n\\t\\t\\t<p>{{'Имя: ' + mainUser.name}}</p>\\n\\t\\t\\t<p>{{'email: ' + mainUser.email}}</p>\\n\\t\\t\\t<p>{{'Баланс: ' + mainUser.money}}</p>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"card-action\\\">\\n\\t\\t\\t<a (click)=\\\"addMoneyToAccount()\\\">пополнить баланс</a>\\n\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n  \\n  \\n\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Account }  from '../../account';\nimport { User }  from '../../user';\nimport { UserService } from '../../UserService';\n\n@Component({\n  selector: 'app-account-info',\n  templateUrl: './account-info.component.html',\n  providers: [UserService],\n  styleUrls: ['./account-info.component.css']\n})\n\n\n\nexport class AccountInfoComponent implements OnInit {\n\t\n\t@Input() mainUser: User;\n\n\tconstructor(private userService: UserService) { }\n\n\tngOnInit() {\n\t}\n\t\n\tprivate _money: number;\n\tprivate _currency_name: string;\n\t\n\taddMoneyToAccount(){\n\t\tthis._money = Account.addMoneyToAccount();\n\t\tthis._currency_name = Account.getCurrencyName();\n\t\t\n\t\talert(\"Вы пополнили свой счет на: \" + this._money + \" \" + this._currency_name);\n\t\tthis.mainUser.money += this._money;\n\t\t\n\t\tthis.userService.updateUserInfo(this.mainUser).subscribe( response=> {\n\t\t\t}\n\t\t);\n\t}\n\n}\n","module.exports = \"\"","module.exports = \"<div [hidden]=\\\"showInterface\\\">\\n\\t<app-enterto [mainUser]=\\\"mainUser\\\" (readyToShow)=\\\"readyToShow($event)\\\"></app-enterto>\\n</div>\\n\\n\\n<div [hidden]=\\\"!showInterface\\\">\\n\\n\\t<app-account-info [mainUser]=\\\"mainUser\\\"></app-account-info>\\n\\t<div></div>\\n\\t<app-menu-display [mainUser]=\\\"mainUser\\\"></app-menu-display>\\n\\n</div>\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { User }  from '../user';\nimport { MenuDisplayComponent } from './menu-display/menu-display.component';\n\n\n@Component({\n\tselector: 'app-client-component',\n\ttemplateUrl: './client-component.component.html',\n\tstyleUrls: ['./client-component.component.css']\n})\n\n\nexport class ClientComponentComponent implements OnInit {\n\t\n\t@ViewChild(MenuDisplayComponent) menuDisplayComponent: MenuDisplayComponent;\n\n\tconstructor() { }\n\tngOnInit() { }\n\t\n\tmainUser = new User(\"\", \"\", 0);\n\tshowInterface = false;\n\t\n\t\n\t\n\treadyToShow(result: boolean){\n\t\tthis.menuDisplayComponent.initOrders(this.mainUser.email);\n\t\tthis.showInterface = result;\t\n\t}\n\t\t\n\n}\n","module.exports = \".ng-valid[required], .ng-valid.required  {\\r\\n  border-left: 3px solid #42A948; /* green */\\r\\n}\\r\\n\\r\\n.ng-invalid:not(form)  {\\r\\n  border-left: 3px solid #a94442; /* red */\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n\\n\\t<h4>Введите ваши данные</h4>\\n\\t<br>\\n\\n\\t\\n\\t<form (ngSubmit)=\\\"onSubmit()\\\" #enterForm=\\\"ngForm\\\">\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\n\\t\\t\\t<label for=\\\"name\\\">Имя</label><br>\\n\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" \\n\\t\\t\\t\\trequired\\n\\t\\t\\t\\t[(ngModel)]=\\\"mainUser.name\\\" name=\\\"name\\\"\\n\\t\\t\\t\\t#name=\\\"ngModel\\\">\\n\\t\\t\\t\\t\\n\\t\\t</div>\\n\\t\\n\\t\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t<label for=\\\"email\\\">Электронная почта</label><br>\\n\\t\\t\\t<input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" \\n\\t\\t\\t\\trequired\\n\\t\\t\\t\\tpattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\" \\n\\t\\t\\t\\t[(ngModel)]=\\\"mainUser.email\\\" name=\\\"email\\\"\\n\\t\\t\\t\\t#email=\\\"ngModel\\\">\\n\\t\\t\\t\\t\\n\\n\\t\\t\\t\\n\\t\\t</div>\\n\\t\\n\\t\\t<br><br>\\n\\t\\t<button type=\\\"submit\\\" class=\\\"btn-large waves-effect waves-light\\\" [disabled]=\\\"!enterForm.form.valid\\\">Войти\\n\\t\\t\\t<i class=\\\"material-icons right\\\">send</i>\\n\\t\\t</button>\\n\\t\\t\\n\\t\\t<div [hidden]=\\\"name.valid || name.pristine\\\"\\n\\t\\t\\tclass=\\\"card-panel red lighten-4\\\">\\n\\t\\t\\t\\tВведите имя\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<div [hidden]=\\\"email.valid || email.pristine\\\"\\n\\t\\t\\tclass=\\\"card-panel red lighten-4\\\">\\n\\t\\t\\t\\tАдрес почты не соответствует формату\\n\\t\\t</div>\\n\\t\\t\\t\\t\\t\\n\\t</form>\\n\\n\\t\\n</div>\"","import { EventEmitter, Input, Output, Component, OnInit } from '@angular/core';\nimport { User }  from '../../user';\nimport { UserService } from '../../UserService';\n\n@Component({\n\tselector: 'app-enterto',\n\ttemplateUrl: './enterto.component.html',\n\tproviders: [UserService],\n\tstyleUrls: ['./enterto.component.css']\n})\n\n\nexport class EntertoComponent implements OnInit {\n\t\n\t@Input() mainUser: User;\n\t@Output() readyToShow = new EventEmitter<boolean>();\n\n\tconstructor(private userService: UserService) { }\t\n\tngOnInit() { }\n\n\tsubmitted = false;\n\t\n\tonSubmit() {\n\t\tlet tempUser = new User(\"\", \"\", 0);\n\t\n\t\t//check user in DB\n\t\tthis.userService.checkUserInDB(this.mainUser.email).subscribe(data => {\n\t\t\ttempUser = data;\n\t\t\t//if there is no user in DB - add user\n\t\t\tif (data === null){\n\t\t\t\tthis.mainUser.money = 100;\n\t\t\t\tthis.userService.addUser(this.mainUser).subscribe(data=> {\n\t\t\t\t\t\tconsole.log(\"new user added\");\n\t\t\t\t},);\n\t\t\t} \n\t\t\telse {\n\t\t\t\t//if user in db  - get data\n\t\t\t\tthis.mainUser.money = tempUser.money;\n\t\t\t}\n\t\t}, err => {console.log(\"error: \" + err);}\n\t\t);\n\n\t\t\n\t\tthis.submitted = true;\n\t\tthis.readyToShow.emit(true);\n\t}\n  \n\tenterToClientInterface() {\t\n\n\t}\n\n\n}\n","module.exports = \".no_money {\\r\\n\\t\\r\\n\\tcolor: red;\\r\\n\\ttext-size: 20em;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n<div class=\\\"col s12\\\">\\n<ul class=\\\"collection with-header\\\">\\n\\t<li class=\\\"collection-header\\\"><h4>Заказы</h4></li>\\n\\t\\t<li *ngFor=\\\"let order of orders\\\" class=\\\"collection-item\\\">\\n\\t\\t\\t<span class=\\\"badge\\\">{{order.condition}}</span>{{order.title}}\\n\\t\\t</li>\\n</ul>\\t\\n\\t\\t\\t\\n\\n\\n\\n\\n<ul class=\\\"collapsible\\\">\\n<li>\\n      <div class=\\\"collapsible-header\\\"><i class=\\\"material-icons\\\">file_upload</i>Добавить заказ</div>\\n      <div class=\\\"collapsible-body\\\">\\n\\t\\t\\t\\t<ul>\\n\\t\\t\\t\\t\\n                <li *ngFor=\\\"let dish of dishes\\\">\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"col s12 m4 l2\\\">\\n\\t\\t\\t\\t\\t\\t<img class=\\\"responsive-img\\\" src=\\\"{{dish.image}}\\\">\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<div class=\\\"col s12 m4 l10\\\">\\n\\t\\t\\t\\t\\t\\t<h5>{{dish.title}}</h5>\\n\\t\\t\\t\\t\\t\\t<p><i>{{dish.ingredients}}</i></p>\\n\\t\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t\\tЦена: {{dish.price}}\\n\\t\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"dish.price > mainUser.money\\\"><span class=\\\"no_money\\\">Пополните баланс на {{dish.price - mainUser.money}}</span></p>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<p *ngIf=\\\"dish.price <= mainUser.money\\\">\\n\\t\\t\\t\\t\\t\\t\\t<a class=\\\"waves-effect waves-light btn blue\\\" (click)=\\\"addOrder(dish)\\\">\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\\"material-icons left\\\">add</i>Добавить</a>\\n\\t\\t\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"divider\\\"></div>\\n                </li>\\n            </ul>\\n\\t</div>\\n</li>\\n</ul>\\n</div>\\n</div>\\n\\n\\n\"","import { Component, OnInit, Input} from '@angular/core';\nimport { MenuService } from '../../../MenuService/MenuService';\nimport { UserService } from '../../UserService';\nimport { Observable } from 'rxjs';\nimport { Dish } from '../../../MenuService/dish';\nimport { Order } from '../../../MenuService/order';\nimport { User }  from '../../user';\n\n\n@Component({\n  selector: 'app-menu-display',\n  templateUrl: './menu-display.component.html',\n  providers: [MenuService, UserService],\n  styleUrls: ['./menu-display.component.css']\n})\n\n\nexport class MenuDisplayComponent implements OnInit {\n\t\n\t@Input() mainUser: User;\n\t\n\tdishes: Dish[] = [];\n\torders: Order[] = [];\n\n\tconstructor(private menuService: MenuService, private userService: UserService) { }\n\t\n\tngOnInit() {\n\t\t//get Menu\n\t\tthis.menuService.getDishes().subscribe(data => {\n\t\t\t\tthis.dishes = data;\n\t\t\t}, err => {console.log(err);}\n\t\t);\n\t}\n\t\n\t//get orders due to user email\n\tpublic initOrders(email: string){\n\t\tthis.menuService.getOrdersDueEmail(email).subscribe(data => {\n\t\t\tthis.orders = data;\n\t\t\t}, err => {console.log(err);}\t\n\t\t);\n\t}\n\t\n\t//add new order\n\tpublic addOrder(dish: Dish) { \n\t\tlet newOrder = new Order();\n\t\tnewOrder.title = dish.title;\n\t\tnewOrder.condition = \"Заказано\";\n\t\tnewOrder.userEmail = this.mainUser.email;\n\t\tnewOrder.date = Date.now();\n\t\t\n\t\tthis.menuService.addOrder(newOrder).subscribe(\n\t\t\tresponse=> {\n\t\t\t\tthis.mainUser.money -= dish.price;\n\t\t\t\tthis.orders.push(newOrder);\n\t\t\t\t//update user data in DB\n\t\t\t\tthis.userService.updateUserInfo(this.mainUser).subscribe( response=> {\n\t\t\t\t\t}\n\t\t\t\t);\t\n\t\t\t},\n\t\t);\n\t}\n\t\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule }   from '@angular/forms';\n\nimport { ClientComponentComponent } from './client-component/client-component.component';\nimport { EntertoComponent } from './client-component/enterto/enterto.component';\nimport { AccountInfoComponent } from './client-component/account-info/account-info.component';\nimport { MenuDisplayComponent } from './client-component/menu-display/menu-display.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n\tFormsModule,\n\tReactiveFormsModule\n  ],\n  declarations: [ClientComponentComponent, EntertoComponent, AccountInfoComponent, MenuDisplayComponent],\n  exports: [ClientComponentComponent]\n})\n\n\nexport class ClientModule { }\n","export class User {\n\n\tconstructor(\n\t\tpublic name: string,\n\t\tpublic email: string,\n\t\tpublic money: number\n\t) { }\n\n\t\n\tclone(oldUser: User){\n\t\tthis.name = oldUser.name;\n\t\tthis.email = oldUser.email;\n\t\tthis.money = oldUser.money;\n\t}\n\t\n}","module.exports = \"\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-is-cooking',\n  templateUrl: './is-cooking.component.html',\n  styleUrls: ['./is-cooking.component.css']\n})\nexport class IsCookingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<app-my-orders></app-my-orders>\\n<app-is-cooking></app-is-cooking>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-kitchen-component',\n  templateUrl: './kitchen-component.component.html',\n  styleUrls: ['./kitchen-component.component.css']\n})\nexport class KitchenComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n<div class=\\\"col s6\\\">\\n<ul class=\\\"collection with-header\\\">\\n\\t<li class=\\\"collection-header\\\"><h4>Заказы</h4></li>\\n\\t\\t<li *ngFor=\\\"let order of orders\\\" class=\\\"collection-item\\\">\\n\\t\\t\\t<p class=\\\"card-panel blue lighten-5\\\">{{order.title}}</p>\\n\\t\\t\\t<p>для: {{order.userEmail}}</p>\\n\\t\\t\\t<a class=\\\"waves-effect waves-light btn blue\\\" (click)=\\\"sendToCook(order)\\\"><i class=\\\"material-icons right\\\">forward</i>Начать готовить</a>\\n\\t\\t</li>\\n</ul>\\t\\n</div>\\n<div class=\\\"col s6\\\">\\n<ul class=\\\"collection with-header\\\">\\n\\t<li class=\\\"collection-header\\\"><h4>Готовятся</h4></li>\\n\\t\\t<li *ngFor=\\\"let cookingOrder of cookingOrders\\\" class=\\\"collection-item\\\">\\n\\t\\t\\t<p class=\\\"card-panel blue lighten-5\\\">{{cookingOrder.title}}</p>\\n\\t\\t\\t<p>для: {{cookingOrder.userEmail}}</p>\\n\\t\\t\\t<a class=\\\"waves-effect waves-light btn\\\" (click)=\\\"sendToDelivery(cookingOrder)\\\"><i class=\\\"material-icons right\\\">check</i>Готово</a>\\n\\t\\t</li>\\n</ul>\\t\\n</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { MenuService } from '../../../MenuService/MenuService';\nimport { Observable } from 'rxjs';\nimport { Order } from '../../../MenuService/order';\n\n//import { Drone } from 'netology-fake-drone-api';\n\n\n\n@Component({\n  selector: 'app-my-orders',\n  templateUrl: './my-orders.component.html',\n  providers: [MenuService],\n  styleUrls: ['./my-orders.component.css']\n})\n\n\nexport class MyOrdersComponent implements OnInit {\n\n\tconstructor(private menuService: MenuService) { }\n  \n\torders: Order[] = [];\n\tcookingOrders: Order[] = [];\n\n\tngOnInit() {\n\t\tthis.menuService.getOrderingOrders().subscribe(data => {\n\t\t\t\tthis.orders = data;\n\t\t\t}, err => {console.log(err);}\n\t\t);\n\t\t\n\t\tthis.menuService.getCookingOrders().subscribe(data => {\n\t\t\t\tthis.cookingOrders = data;\n\t\t\t}, err => {console.log(err);}\n\t\t);\n\t}\n\n  \n\t\n\tpublic sendToCook(order: Order){\n\t\torder.condition = \"Готовится\";\n\t\t\n\t\tthis.menuService.changeOrderCondition(order).subscribe(data => {\n\t\t\t\tthis.cookingOrders.push(order);\n\t\t\t\tlet index = this.orders.indexOf(order, 0);\n\t\t\t\tif (index > -1) {\n\t\t\t\t\tthis.orders.splice(index, 1);\n\t\t\t\t}\n\t\t\t}, err => {console.log(err);}\n\t\t);\t  \n\t}\n\t\n\t\n\tpublic sendToDelivery(order: Order){\n\t\torder.condition = \"Доставляется\";\n\t\t\n\t\tthis.menuService.changeOrderCondition(order).subscribe(data => {\n\t\t\t\tlet index = this.cookingOrders.indexOf(order, 0);\n\t\t\t\tif (index > -1) {\n\t\t\t\t\tthis.cookingOrders.splice(index, 1);\n\t\t\t\t}\n\t\t\t}, err => {console.log(err);}\n\t\t);\t  \n\t}\n  \n  \n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { KitchenComponent } from './kitchen-component/kitchen-component.component';\nimport { MyOrdersComponent } from './kitchen-component/my-orders/my-orders.component';\nimport { IsCookingComponent } from './kitchen-component/is-cooking/is-cooking.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [KitchenComponent, MyOrdersComponent, IsCookingComponent],\n  exports: [KitchenComponent]\n})\nexport class KitchenModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}